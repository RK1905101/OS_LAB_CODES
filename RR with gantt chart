#include<stdio.h>
 
struct times
{
       int p,at,bt,wt,tat,rt;
};
 
 
void sort_at(struct times a[],int pro)
{
       int i,j;
       struct times temp;
       for(i=0;i<pro;i++)
       {
              for(j=i+1;j<pro;j++)
              {
                     if(a[i].at > a[j].at)
                     {
                           temp = a[i];
                           a[i] = a[j];
                           a[j] = temp;
                     }
              }
       }
       return;
}
 
int main()
{
       int i,j,pro,time,remain,flag=0,ts;
       struct times a[100];
       float avgwt=0,avgtt=0;
       

       printf("Enter Number Of Processes : ");
       scanf("%d",&pro);
       remain=pro;
       for(i=0;i<pro;i++)
       {
              printf("Enter arrival time and Burst time for Process P%d:\n ",i);
              scanf("%d%d",&a[i].at,&a[i].bt);
              a[i].p = i;
              a[i].rt = a[i].bt;
       }
       sort_at(a,pro);
       printf("Enter Time Quantum: ");
       scanf("%d",&ts);
       printf("\n\n");
       printf("Gantt Chart\n");
       printf("0");
       for(time=0,i=0;remain!=0;)
       {
              if(a[i].rt<=ts && a[i].rt>0)
              {
                     time = time + a[i].rt;
                     printf(" -> [P%d] <- %d",a[i].p,time);
                     a[i].rt=0;
                     flag=1;
              }
              else if(a[i].rt > 0)
              {
                     a[i].rt = a[i].rt - ts;
                     time = time + ts;
                     printf(" -> [P%d] <- %d",a[i].p,time);
              }
              if(a[i].rt==0 && flag==1)
              {
                     remain--;
                     a[i].tat = time-a[i].at;
                     a[i].wt = time-a[i].at-a[i].bt;
                     avgwt = avgwt + time-a[i].at-a[i].bt;
                     avgtt = avgtt + time-a[i].at;
                     flag=0;
              }
              if(i==pro-1)
                     i=0;
              else if(a[i+1].at <= time)
                     i++;
              else
                     i=0;
       }
       printf("\n\n");
       
       printf("PID\tAT\tBT\tTAT\tWT\n");
      
       for(i=0;i<pro;i++)
       {
              printf("P%d\t%d\t%d\t%d\t%d\n",a[i].p,a[i].at,a[i].bt,a[i].tat,a[i].wt);
       }
       
       avgwt = avgwt/pro;
       avgtt = avgtt/pro;
       printf("Average Waiting Time : %.2f\n",avgwt);
       printf("Average Turnaround Time : %.2f\n",avgtt);
       return 0;
}
 
 
 
 
 
